name: Clazy Analysis for OpenterfaceQT

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  pages: write

jobs:
  clazy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Git Credentials
        run: |
            git config user.name github-actions[bot]
            git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          
      - name: Install Qt 6.5.3
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.3'
          host: 'linux'
          arch: 'gcc_64'
          modules: 'qtmultimedia qtserialport'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clazy \
            libusb-1.0-0-dev \
            libavcodec-dev \
            libavformat-dev \
            libavutil-dev \
            libswscale-dev \
            libavdevice-dev \
            bear

      - name: Build project with compilation database
        run: |
          mkdir build
          cd build
          qmake ..
          bear -- make -j$(nproc)

      - name: Run Clazy
        run: |
          cd build
          export CLAZY_CHECKS="level0,level1,level2"
          echo "Running Clazy analysis..."
          echo "Current directory: $(pwd)"
          echo "Checking for compile_commands.json:"
          ls -la compile_commands.json || echo "compile_commands.json not found!"
          
          # Create empty results file
          touch clazy_results.txt
          
          # Find all cpp files and analyze them
          find .. -type f \( -name "*.cpp" -o -name "*.h" \) | while read -r file; do
            echo "Analyzing: $file"
            clazy-standalone -p compile_commands.json "$file" 2>&1 | tee -a clazy_results.txt || true
          done
          
          # Check if results file has content
          if [ ! -s clazy_results.txt ]; then
            echo "No Clazy results generated. Something might be wrong."
            echo "Clazy version: $(clazy-standalone --version)"
            echo "Directory contents:"
            ls -la
          fi

      - name: Convert results to HTML
        run: |
          cat > convert.py << 'EOF'
          import sys
          import html
          import os

          results_file = 'build/clazy_results.txt'
          if not os.path.exists(results_file):
              print(f"Warning: {results_file} does not exist!")
              content = "No analysis results found."
          else:
              with open(results_file, 'r') as f:
                  content = f.read() or "No issues found in the analysis."

          html_content = f"""
          <!DOCTYPE html>
          <html>
          <head>
              <title>Clazy Analysis Report</title>
              <style>
                  body {{ font-family: Arial, sans-serif; margin: 40px; }}
                  pre {{ background-color: #f5f5f5; padding: 15px; border-radius: 5px; white-space: pre-wrap; }}
                  .warning {{ color: #856404; background-color: #fff3cd; padding: 10px; margin: 10px 0; border-radius: 5px; }}
                  .error {{ color: #721c24; background-color: #f8d7da; padding: 10px; margin: 10px 0; border-radius: 5px; }}
              </style>
          </head>
          <body>
              <h1>Clazy Analysis Report</h1>
              <pre>{html.escape(content)}</pre>
          </body>
          </html>
          """

          with open('clazy_report.html', 'w') as f:
              f.write(html_content)
          EOF
          python3 convert.py

      - name: Checkout gh-pages branch
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git checkout --orphan gh-pages

      - name: Copy HTML report
        run: |
          mv clazy_report.html index.html
          git add index.html
          git commit -m "Update Clazy report"

      - name: Push to gh-pages
        run: |
          git push --force origin gh-pages